http:
#################            
# HTTP routers #
################
  routers:
    router-secure:
      service: router
      rule: Host(`router.apex-migrations.net`)
      entryPoints:
        - web-secure
      middlewares:
        - real-ip-foo
      tls:
        options: tls

    prometheus-dashboard:
      service: prometheus
      rule: Host(`prometheus.apex-migrations.net`)
      entryPoints:
        - web-secure
      tls:
        options: tls

    cadvisor:
      service: cadvisor
      rule: Host(`cadvisor.apex-migrations.net`)
      entryPoints:
        - web-secure
      tls:
        options: tls

    traefik-metrics:
      service: traefik-metrics
      rule: Host(`traefikmetrics.apex-migrations.net`)
      entryPoints:
        - web-secure
      tls:
        options: tls

####################
# HTTP Middlewares #
####################
  middlewares:
    real-ip-foo:
      plugin:
        real-ip:
          Proxy:
            - proxyHeadername: X-From-Cdn
              proxyHeadervalue: mf-fun
              realIP: X-Forwarded-For
            - proxyHeadername: X-From-Cdn
              proxyHeadervalue: mf-bar
              realIP: Client-Ip
              OverwriteXFF: true # default: false, v1.0.2 or above
            - proxyHeadername: X-From-Cdn
              proxyHeadervalue: cf-foo
              realIP: Cf-Connecting-Ip
              OverwriteXFF: true # default: false, v1.0.2 or above
            - proxyHeadername: "*"
              realIP: RemoteAddr

    ################################
    # Redirect to https middleware #
    ################################
    my-redirect2https:
      plugin:
        redirect2https:
            permanent: "true"

    traefik-container-manager:
      plugin:
        traefik-container-manager:
            name: ansible-ui
            serviceUrl: https://ansible.apex-migrations.net
            timeout: "60"

###############################################################################
# URL can be an hostname/ip of docker container, or ip address on the network #
###############################################################################
  services:
#################            
# HTTP services #
#################
    router:
      loadBalancer:
        servers:
          - url: http://192.168.2.1:80
        passHostHeader: false
        # When sticky sessions are enabled, a Set-Cookie header is set on the initial response to let the client know which server handles the first response.
        sticky:
         cookie:
            name: my_sticky_cookie
            secure: true
            httpOnly: true

    prometheus:
      loadBalancer:
        servers:
          - url: http://grafana.prometheus:9090
        passHostHeader: false

    cadvisor:
      loadBalancer:
        servers:
          - url: http://grafana.cadvisor:8080
        passHostHeader: false

    traefik-metrics:
      loadBalancer:
        servers:
          - url: http://traefik.rproxy:8080
        passHostHeader: false
          
####################################
# TLS options and cypher specified #
####################################
tls:
  options:
    tls:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256