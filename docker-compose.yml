version: "3.3"

services:
  #####################
  # Traefik Hub-Agent #
  #####################
  # hub-agent:
  #   image: ghcr.io/traefik/hub-agent-traefik:experimental
  #   pull_policy: always
  #   container_name: hub-agent
  #   restart: "on-failure"
  #   command:
  #     - run
  #     - --hub.token=11f5a6f3-04d4-4034-beab-9a4e13505bea
  #     - --auth-server.advertise-url=http://hub-agent
  #     - --traefik.host=${url}
  #     - --traefik.tls.insecure=false
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   networks:
  #     - web-secure
  #     - web

  #########################
  # Traefik reverse proxy #
  #########################
  traefik.rproxy:
    image: "traefik:latest"
    container_name: traefik.rproxy
    restart: always
    
    ################################################################################################
    # Exposed ports to the host so traefik container can listen to these ports on the host machine #
    ################################################################################################
    ports:
      - "80:80"
      - "443:443"
      - "853:853"
      - "8082:8082"

    ###############################################################
    # All volumes which are mounted locally to the traefik folder #
    ###############################################################
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      ##############################################
      # This is to save my ssl certifcates locally #
      ##############################################
      - "./traefik-ssl-certs:/ssl-certs"
      #################################
      # This is for my dynamic config #
      #################################
      - "./configurations/:/configurations"
      ########################################
      # This is for my traefik static config #
      ########################################
      - "./configurations/:/etc/traefik/"      

    labels:
      - "traefik.enable=true"
      ####################################################################################
      # this is a domain name i have pointed to my home address via no-ip.               #
      # you can create a no-ip account, and set it up so you have an dynamic DNS address #
      # In your domain you create a new CNAME record for your website                    #
      # After that you point that CNAME record to the dynamic DNS record                 #
      ####################################################################################
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.cloud-migrations.nl`)"
      ##################################################################################
      # This is my certresolved named: production and can be found in my static config #
      ##################################################################################
      - "traefik.http.routers.traefik-secure.tls.certresolver=production"
      - "traefik.http.routers.traefik-secure.tls=true"
      ################################
      # Port to traefik dashboard UI #
      ################################
      - "traefik.http.services.traefik-secure.loadbalancer.server.port=8080" #port to the webservice
      #####################################################
      # I have created a docker network named: web-secure #
      #####################################################
      - "traefik.http.routers.traefik-secure.entrypoints=web-secure"
      ###################
      # Traefik service #
      ###################
      - "traefik.http.routers.traefik-secure.service=api@internal"
      #####################################################################################################
      # Use this only if you have Authelia deployed in your infra, and is reachable via an docker network #
      #####################################################################################################
      - "traefik.http.routers.traefik-secure.middlewares=authelia-secure@docker"
    
    ########################
    # Defining my networks #
    ########################
    networks:
      - web-secure
      - web
      - monitoring-stack

#####################################################
# Persisting of my docker network within this stack #
#####################################################
networks: 
  web-secure:
    external: true
  web:
    external: true
  monitoring-stack:
    external: true
